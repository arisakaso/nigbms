defaults:
  - meta_solver: constant_meta_solver_default
  - solver: testfunction_solver_default
  - surrogate: testfunction_surrogate_default

hydra:
  run:
    dir: outputs/minimize_testfunctions/${now:%Y-%m-%d_%H-%M-%S}
  job:
    chdir: True

wandb: 
  project: minimize_testfunctions
  mode: disabled

problem:
  test_function: sphere
  dim: 128
  num_samples: 100
  num_iter: 1000
  initial_range:
    - -1
    - 1
  tensor_type: torch.cuda.DoubleTensor

meta_solver:
  model:
    shape:
      - ${problem.num_samples}
      - ${problem.dim}
    range: ${problem.initial_range}

solver:
  params_learn: 
    x:
      - ${problem.dim}

surrogate:
  params_learn: ${solver.params_learn}
  features: ${surrogate.params_learn}
  model:
    num_neurons: 1024
    
  # model:
  #   _target_: nigbms.modules.models.CNN1D
  #   in_channels: ${calc_in_channels:${surrogate.features}}
  #   out_unit: 1
  #   base_channels: 64
  #   kernel_size: 1
  #   batch_normalization: False
  #   hidden_activation: nn.GELU
  #   output_activation: nn.Identity
  #   num_conv_layers: 2
  #   num_fcn_layers: 2
    
wrapper:
  opt:
    _target_: torch.optim.SGD
    lr: 0.001
    momentum: 0.9
  loss:
    _target_: nigbms.modules.losses.SurrogateSolverLoss
    weights:
      dvf_loss: 1
    reduce: True
  clip: 100.0
  cfg:
    grad_type: cv_fwd
    jvp_type: forwardAD
    eps: 1.0e-10
    Nv: 1
    v_scale: 1.0
    v_dist: rademacher

constructor:
  _target_: nigbms.modules.constructors.ThetaConstructor
  params:
    x:
      codec: 
        _target_: nigbms.modules.constructors.IdentityCodec
        enc_dim: ${problem.dim}
        dec_dim: ${problem.dim}
      shape: 
        - ${problem.dim}
    
opt:
  _target_: torch.optim.SGD
  lr: 0.01

clip: null
seed: 0
device: cuda
dtype: torch.float64

